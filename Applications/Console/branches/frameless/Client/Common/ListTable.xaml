<UserControl x:Class="Easynet.Edge.UI.Client.ListTable"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:this="clr-namespace:Easynet.Edge.UI.Client"
	x:Name="_this"
    >
	
	<UserControl.Resources>

		<Style x:Key="DragHandle" TargetType="ContentControl">
			<Setter Property="Width" Value="12"/>
			<Setter Property="Height" Value="8"/>
			<Setter Property="Margin" Value="0,0,6,0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ContentControl}">
						<Grid SnapsToDevicePixels="True">
							<Grid.Resources>
								<Style TargetType="{x:Type Rectangle}">
									<Setter Property="Width" Value="12"/>
									<Setter Property="Height" Value="2"/>
									<Setter Property="Fill">
										<Setter.Value>
											<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
												<GradientStop Color="#999" Offset="0"/>
												<GradientStop Color="#eee" Offset="1"/>
											</LinearGradientBrush>
										</Setter.Value>
									</Setter>
								</Style>
							</Grid.Resources>
							<Rectangle VerticalAlignment="Top"/>
							<Rectangle VerticalAlignment="Center"/>
							<Rectangle VerticalAlignment="Bottom"/>
							<Rectangle Fill="#000" Opacity="0.0" Height="Auto" this:ListTable.IsDragHandle="{TemplateBinding this:ListTable.IsDragHandle}"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="this:ListTable.IsDragHandle" Value="True">
					<Setter Property="Cursor" Value="SizeAll"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="Bullet" TargetType="{x:Type Ellipse}">
			<Setter Property="Width" Value="12"/>
			<Setter Property="Height" Value="12"/>
			<Setter Property="Fill">
				<Setter.Value>
					<LinearGradientBrush StartPoint="0,1" EndPoint="0.5,0">
						<GradientStop Color="#779231" Offset="0"/>
						<GradientStop Color="#B7CC87" Offset="1"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
		</Style>
		
		<Style x:Key="GroupExpander" TargetType="{x:Type ToggleButton}">

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Grid x:Name="header" SnapsToDevicePixels="False">
							<Ellipse HorizontalAlignment="Center" x:Name="circle" VerticalAlignment="Center" Width="19" Height="19" Stroke="DarkGray">
								<Ellipse.Fill>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FCFCFA" Offset="0"/>
										<GradientStop Color="#F9F9F9" Offset="1"/>
									</LinearGradientBrush>
								</Ellipse.Fill>
							</Ellipse>
							<Ellipse Visibility="Hidden" HorizontalAlignment="Center" x:Name="shadow" VerticalAlignment="Center" Width="17" Height="17">
								<Ellipse.Fill>
									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
										<GradientStop Color="Transparent" Offset="0.5"/>
										<GradientStop Color="#30111111" Offset="1"/>
									</LinearGradientBrush>
								</Ellipse.Fill>
							</Ellipse>
							<Path SnapsToDevicePixels="false" HorizontalAlignment="Center" x:Name="arrow" VerticalAlignment="Center" Stroke="#666" StrokeThickness="2" Data="M 1.5,1  L 5,4.5  L 1.5,8"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="true">
								<Setter TargetName="arrow" Property="Data" Value="M 1,1.5  L 4.5,5  L 8,1.5"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="#666"/>
								<Setter Property="Fill" TargetName="circle" Value="#fff"/>
								<Setter Property="Stroke" TargetName="arrow" Value="#222"/>
								<Setter Property="Visibility" TargetName="shadow" Value="Visible"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
		<this:ListTableItemContainerStyleSelector x:Key="ItemStyleSelector"/>
		<this:ListTableColumnHeaderCornerRadiusConverter x:Key="CornerRadiusConverter"
														 RadiusLeft="5"
														 RadiusRight="5"/>
		
	</UserControl.Resources>

	<Border
		BorderBrush="#c8c8c8"
		BorderThickness="1"
		CornerRadius="5"
		Background="#ffffff"
		Padding="1,1,1,5"
	>
		<ListView x:Name="_listView"
			SelectionMode="{Binding Path=SelectionMode, ElementName=_this}"
			AllowDrop="True"
			PreviewMouseDown="_listView_PreviewMouseDown"
			PreviewMouseMove="_listView_PreviewMouseMove"	  
			PreviewDragEnter="_listView_DragEnter"
			PreviewDragOver="_listView_DragOver"
			PreviewDragLeave="_listView_DragLeave"
			PreviewDrop="_listView_Drop"
			SizeChanged="_listView_SizeChanged"
			ToggleButton.Checked="ToggleButton_Changed"
			ToggleButton.Unchecked="ToggleButton_Changed"
			IsSynchronizedWithCurrentItem="True"
			Padding="0"
			Margin="0"
			BorderBrush="Transparent"
			BorderThickness="0"
			ItemContainerStyleSelector="{StaticResource ItemStyleSelector}"
		>
			
			<ListView.Resources>
				
				<!-- Column header -->
				<Style TargetType="{x:Type GridViewColumnHeader}">
					<Setter Property="Padding" Value="4"/>
					<Setter Property="Margin" Value="0,0,0,1"/>
					<Setter Property="Foreground" Value="#ffffff"/>
					<Setter Property="Background" Value="#8d8d8d"/>
					<Setter Property="BorderBrush" Value="Transparent"/>
					<Setter Property="BorderThickness" Value="0"/>
					
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
								<Border Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										Margin="{TemplateBinding Margin}"
										CornerRadius="{TemplateBinding Column, Converter={StaticResource CornerRadiusConverter}}"
								>
									<ContentPresenter Content="{TemplateBinding Content}"
									   HorizontalAlignment="Left"
									   VerticalAlignment="Center"
									   Margin="{TemplateBinding Padding}"/>
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
				
				<!-- Items -->
				<Style TargetType="{x:Type ListViewItem}">
					
					<Setter Property="BorderBrush" Value="#C2C3C5"/>
					<Setter Property="BorderThickness" Value="1"/>
					<Setter Property="HorizontalAlignment" Value="Stretch"/>
					<Setter Property="Margin" Value="0,0,0,-1"/>

					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ListViewItem}">
								<Border SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}" ClipToBounds="False">
									<Grid>
										<GridViewRowPresenter x:Name="gr"/>
										<Canvas>
											<Rectangle x:Name="dragMarkerTop" Height="4" Width="200" Opacity="70" Fill="{TemplateBinding BorderBrush}" Canvas.Top="-2" Visibility="Collapsed" IsHitTestVisible="False"/>
											<Rectangle x:Name="dragMarkerBottom" Height="4" Width="200" Opacity="70" Fill="{TemplateBinding BorderBrush}" Canvas.Bottom="-2" Visibility="Collapsed" IsHitTestVisible="False"/>
										</Canvas>
									</Grid>
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="IsSelected" Value="true">
										<Setter Property="Background" TargetName="Bd" Value="#E3EDCB"/>
									</Trigger>
									<Trigger Property="IsEnabled" Value="false">
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
									</Trigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsMouseOver" Value="true"/>
											<Condition Property="IsSelected" Value="false"/>
										</MultiTrigger.Conditions>
										<Setter Property="Background" TargetName="Bd" Value="#E3E3E3"/>
									</MultiTrigger>
									<Trigger Property="this:ListTable.DragOverState" Value="Below">
										<Setter TargetName="dragMarkerBottom" Property="Visibility" Value="Visible" />
									</Trigger>
									<Trigger Property="this:ListTable.DragOverState" Value="Above">
										<Setter TargetName="dragMarkerTop" Property="Visibility" Value="Visible" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>

				<Style x:Key="ParentItemStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
					<Setter Property="Background" Value="#F5F5F5"/>
				</Style>

				<Style x:Key="ChildItemStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
					<Setter Property="Background" Value="#FFFFFF"/>
				</Style>

				<!--
				<Style x:Key="ParentItemStyle-alternate" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ParentItemStyle}">
					<Setter Property="Background" Value="#FFFFFF"/>
				</Style>

				<Style x:Key="ChildItemStyle-alternate" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ChildItemStyle}">
					<Setter Property="Background" Value="#FFFFFF"/>
				</Style>
				-->
			
			</ListView.Resources>
		</ListView>
	</Border>
</UserControl>
