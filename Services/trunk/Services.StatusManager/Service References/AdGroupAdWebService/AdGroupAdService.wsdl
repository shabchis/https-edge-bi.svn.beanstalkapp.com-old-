<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:tns="https://adwords.google.com/api/adwords/cm/v200909" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="https://adwords.google.com/api/adwords/cm/v200909" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xsd:schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" elementFormDefault="qualified" targetNamespace="https://adwords.google.com/api/adwords/cm/v200909" jaxb:version="1.0">
      <xsd:annotation>
        <xsd:appinfo>
          <jaxb:globalBindings typesafeEnumMaxMembers="999999" />
        </xsd:appinfo>
      </xsd:annotation>
      <xsd:complexType name="AdError">
        <xsd:annotation>
          <xsd:documentation>
            Base error class for Ad Service.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:AdError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="AdExtensionOverrideStats">
        <xsd:annotation>
          <xsd:documentation>
            Represents stats specific to AdExtensionOverrides.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Stats">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="AdGroupAdCountLimitExceeded">
        <xsd:annotation>
          <xsd:documentation>
            Indicates too many ads were added/enabled under the specified adgroup.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:EntityCountLimitExceeded">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="AdGroupAdError">
        <xsd:annotation>
          <xsd:documentation>
            Error information for AdGroupAdService.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:AdGroupAdError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="AdScheduleTarget">
        <xsd:annotation>
          <xsd:documentation>
            Immutable structure to hold an ad schedule target.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Target">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="dayOfWeek" type="tns:DayOfWeek">
                <xsd:annotation>
                  <xsd:documentation>
                    Day of the week the schedule applies to.
                    &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="startHour" type="xsd:int">
                <xsd:annotation>
                  <xsd:documentation>
                    Starting hour in 24 hour time (0..23).
                    &lt;span class="constraint InRange"&gt;This field must be between 0.0 and 23.0, inclusive.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="startMinute" type="tns:MinuteOfHour">
                <xsd:annotation>
                  <xsd:documentation>
                    Interval starts these minutes after the starting hour.
                    &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="endHour" type="xsd:int">
                <xsd:annotation>
                  <xsd:documentation>
                    Ending hour in 24 hour time (0..24); &lt;code&gt;24&lt;/code&gt; signifies end of the day.
                    &lt;span class="constraint InRange"&gt;This field must be between 0.0 and 24.0, inclusive.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="endMinute" type="tns:MinuteOfHour">
                <xsd:annotation>
                  <xsd:documentation>
                    Interval ends these minutes after the ending hour.
                    &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="bidMultiplier" type="xsd:double">
                <xsd:annotation>
                  <xsd:documentation>
                    Multiplying factor for bids during this specified time interval.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="AdStats">
        <xsd:annotation>
          <xsd:documentation>
            Represents stats specific to Ads
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Stats">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="percentServed" type="xsd:double">
                <xsd:annotation>
                  <xsd:documentation>
                    Percentage of time this ad gets shown
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="AdStatsSelector">
        <xsd:annotation>
          <xsd:documentation>
            Ad specific stats selector.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:StatsSelector">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="Address">
        <xsd:annotation>
          <xsd:documentation>
            Structure to specify an address location.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="streetAddress" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Street address line 1; &lt;code&gt;null&lt;/code&gt; if unknown.
                &lt;span class="constraint StringLength"&gt;This string must not be empty.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="streetAddress2" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Street address line 2; &lt;code&gt;null&lt;/code&gt; if unknown.
                &lt;span class="constraint StringLength"&gt;This string must not be empty.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="cityName" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Name of the city; &lt;code&gt;null&lt;/code&gt; if unknown.
                &lt;span class="constraint StringLength"&gt;This string must not be empty.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="provinceCode" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Province or state code; &lt;code&gt;null&lt;/code&gt; if unknown.
                &lt;span class="constraint StringLength"&gt;This string must not be empty.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="provinceName" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Province or state name; &lt;code&gt;null&lt;/code&gt; if unknown.
                &lt;span class="constraint StringLength"&gt;This string must not be empty.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="postalCode" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Postal code; &lt;code&gt;null&lt;/code&gt; if unknown.
                &lt;span class="constraint StringLength"&gt;This string must not be empty.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="countryCode" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Country code; &lt;code&gt;null&lt;/code&gt; if unknown.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="AgeTarget">
        <xsd:annotation>
          <xsd:documentation>
            Immutable structure to hold an age target.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:DemographicTarget">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="age" type="tns:AgeTarget.Age">
                <xsd:annotation>
                  <xsd:documentation>
                    The age segment to be targeted.
                    &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="Audio">
        <xsd:annotation>
          <xsd:documentation>
            Encapsulates an Audio media identified by a MediaId.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Media">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="durationMillis" type="xsd:long">
                <xsd:annotation>
                  <xsd:documentation>
                    The duration of the associated audio, in milliseconds.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="streamingUrl" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    The streaming url of the audio.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="readyToPlayOnTheWeb" type="xsd:boolean">
                <xsd:annotation>
                  <xsd:documentation>
                    Indicates whether the audio is ready to play on the web.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="AuthenticationError">
        <xsd:annotation>
          <xsd:documentation>
            Errors returned when Authentication failed.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:AuthenticationError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="AuthorizationError">
        <xsd:annotation>
          <xsd:documentation>
            Errors that are thrown due to an authorization problem.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:AuthorizationError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="CityTarget">
        <xsd:annotation>
          <xsd:documentation>
            Immutable structure to specify a geographic target for a city.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:GeoTarget">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="cityName" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Name of the city.
                    &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                    &lt;span class="constraint StringLength"&gt;This string must not be empty.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="provinceCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Province or state code; &lt;code&gt;null&lt;/code&gt; if unknonwn.
                    &lt;span class="constraint StringLength"&gt;This string must not be empty.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="countryCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Country code.
                    &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ClientTermsError">
        <xsd:annotation>
          <xsd:documentation>
            Encapsulates the errors thrown during client terms checks for adwords.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:ClientTermsError.Reason" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="CountryTarget">
        <xsd:annotation>
          <xsd:documentation>
            Immutable structure to specify a geographic target for a country.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:GeoTarget">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="countryCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Country code.
                    &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="DatabaseError">
        <xsd:annotation>
          <xsd:documentation>
            Errors that are thrown due to a database access problem.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:DatabaseError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="DateError">
        <xsd:annotation>
          <xsd:documentation>
            Errors associated with invalid dates and date ranges.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:DateError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="DateRange">
        <xsd:annotation>
          <xsd:documentation>
            Represents a range of dates that has either an upper or a lower bound.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="min" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                the lower bound of this date range, inclusive.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="max" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                the upper bound of this date range, inclusive.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DeprecatedAd">
        <xsd:annotation>
          <xsd:documentation>
            Represents a deprecated ad.
            
            Deprecated ads can be deleted, but cannot be created.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Ad">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="name" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Name of the ad.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="type" type="tns:DeprecatedAd.Type">
                <xsd:annotation>
                  <xsd:documentation>
                    Type of the creative.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="Dimensions">
        <xsd:annotation>
          <xsd:documentation>
            Represents a simple height-width dimension.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="width" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>
                Width of the dimension
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="height" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>
                Height of the dimension
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DistinctError">
        <xsd:annotation>
          <xsd:documentation>
            Errors related to distinct ids or content.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:DistinctError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="DoubleValue">
        <xsd:annotation>
          <xsd:documentation>
            Number value type for constructing double valued ranges.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:NumberValue">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="number" type="xsd:double">
                <xsd:annotation>
                  <xsd:documentation>
                    the underlying double value.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="EntityCountLimitExceeded" abstract="true">
        <xsd:annotation>
          <xsd:documentation>
            Signals that an entity count limit was exceeded for some level.
            For example, too many criteria for a campaign.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:EntityCountLimitExceeded.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    Specifies which level's limit was exceeded.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="enclosingId" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Id of the entity whose limit was exceeded.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="limit" type="xsd:int">
                <xsd:annotation>
                  <xsd:documentation>
                    The limit which was exceeded.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="EntityNotFound">
        <xsd:annotation>
          <xsd:documentation>
            An id did not correspond to an entity, or it referred to an entity which does not belong to the
            customer.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:EntityNotFound.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    Reason for this error.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="GenderTarget">
        <xsd:annotation>
          <xsd:documentation>
            Immutable structure to hold a gender target.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:DemographicTarget">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="gender" type="tns:GenderTarget.Gender">
                <xsd:annotation>
                  <xsd:documentation>
                    The gender segment to be targeted.
                    &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="GeoPoint">
        <xsd:annotation>
          <xsd:documentation>
            Specifies a geo location with the supplied lat/long.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="latitudeInMicroDegrees" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>
                Micro degrees for the latitude.
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="longitudeInMicroDegrees" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>
                Micro degrees for the longitude.
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="IdError">
        <xsd:annotation>
          <xsd:documentation>
            Errors associated with the ids.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:IdError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="Image">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Media">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="data" type="xsd:base64Binary" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ImageError">
        <xsd:annotation>
          <xsd:documentation>
            Error class for errors associated with parsing image data.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:ImageError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="InternalApiError">
        <xsd:annotation>
          <xsd:documentation>
            Indicates that a server-side error has occured. {@code InternalApiError}s
            are generally not the result of an invalid request or message sent by the
            client.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:InternalApiError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="LanguageTarget">
        <xsd:annotation>
          <xsd:documentation>
            Immutable structure to hold a language target.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Target">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="languageCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Language code.
                    &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                    &lt;span class="constraint StringLength"&gt;This string must not be empty.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="LongValue">
        <xsd:annotation>
          <xsd:documentation>
            Number value type for constructing long valued ranges.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:NumberValue">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="number" type="xsd:long">
                <xsd:annotation>
                  <xsd:documentation>
                    the underlying long value.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="MediaError">
        <xsd:annotation>
          <xsd:documentation>
            Error class for media related errors.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:MediaError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="Media_MediaExtendedCapabilityType_Media_MediaExtendedCapabilityStateMapEntry">
        <xsd:annotation>
          <xsd:documentation>
            This represents an entry in a map with a key of type MediaExtendedCapabilityType
            and value of type MediaExtendedCapabilityState.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="key" type="tns:Media.MediaExtendedCapabilityType" />
          <xsd:element minOccurs="0" maxOccurs="1" name="value" type="tns:Media.MediaExtendedCapabilityState" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Media_Size_DimensionsMapEntry">
        <xsd:annotation>
          <xsd:documentation>
            This represents an entry in a map with a key of type Size
            and value of type Dimensions.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="key" type="tns:Media.Size" />
          <xsd:element minOccurs="0" maxOccurs="1" name="value" type="tns:Dimensions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Media_Size_StringMapEntry">
        <xsd:annotation>
          <xsd:documentation>
            This represents an entry in a map with a key of type Size
            and value of type String.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="key" type="tns:Media.Size" />
          <xsd:element minOccurs="0" maxOccurs="1" name="value" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MetroTarget">
        <xsd:annotation>
          <xsd:documentation>
            Immutable structure to specify a geographic target for a metro.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:GeoTarget">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="metroCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Metro code.
                    &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                    &lt;span class="constraint StringLength"&gt;This string must not be empty.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="MobileAd">
        <xsd:annotation>
          <xsd:documentation>
            Represents a MobileAd.
            
            A mobile ad can contain a click-to-call phone number, a link to a website,
            or both.  You specify which features you want by setting certain fields, as
            shown in the following table.  For example, to create a click-to-call mobile
            ad, set the fields in the &lt;b&gt;Click-to-call&lt;/b&gt; column.  A hyphen means don't
            set the corresponding field.
            &lt;/p&gt;
            &lt;table summary=""&gt;
            &lt;tr&gt; &lt;th scope="col"&gt; Click-to-call &lt;/th&gt;
            &lt;th scope="col"&gt; Website       &lt;/th&gt;
            &lt;th scope="col"&gt; Both          &lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt; headline        &lt;br /&gt;
            description     &lt;br /&gt;
            mobileCarriers  &lt;br /&gt;
            phoneNumber     &lt;br /&gt;
            countryCode     &lt;br /&gt;
            businessName    &lt;br /&gt;
            -               &lt;br /&gt;
            -               &lt;br /&gt;
            -               &lt;br /&gt;
            &lt;/td&gt;
            &lt;td&gt; headline        &lt;br /&gt;
            description     &lt;br /&gt;
            mobileCarriers  &lt;br /&gt;
            -               &lt;br /&gt;
            -               &lt;br /&gt;
            -               &lt;br /&gt;
            displayUrl      &lt;br /&gt;
            destinationUrl  &lt;br /&gt;
            markupLanguages &lt;br /&gt;
            &lt;/td&gt;
            &lt;td&gt; headline        &lt;br /&gt;
            description     &lt;br /&gt;
            mobileCarriers  &lt;br /&gt;
            phoneNumber     &lt;br /&gt;
            countryCode     &lt;br /&gt;
            businessName    &lt;br /&gt;
            displayUrl      &lt;br /&gt;
            destinationUrl  &lt;br /&gt;
            markupLanguages &lt;br /&gt;
            &lt;/td&gt;&lt;/tr&gt;
            &lt;/table&gt;
            
            &lt;h2 class="normalsize"&gt;More Information&lt;/h2&gt;
            &lt;ul class="nolist"&gt;
            &lt;li&gt;
            &lt;a href="https://adwords.google.com/select/mobileguidelines.html"
            target="_blank"&gt;Mobile Ad Editorial Guidelines&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;
            &lt;a href="http://adwords.google.com/support/bin/topic.py?topic=8500"
            target="_blank"&gt;Mobile Ad FAQ&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Ad">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="headline" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    The headline of the ad
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="description" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    The description line
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="markupLanguages" type="tns:MarkupLanguageType">
                <xsd:annotation>
                  <xsd:documentation>
                    The list of markup languages to use for the mobile ad.
                    &lt;p&gt;
                    Values are:
                    &lt;ul&gt;
                    &lt;li&gt;CHTML
                    &lt;li&gt;HTML
                    &lt;li&gt;WML
                    &lt;li&gt;XHTML
                    &lt;/ul&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="mobileCarriers" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    The list of mobile carriers to use for the mobile ad.  Each string
                    must be of the form 'CarrierName@CountryCode'. To specify that
                    all available carriers are to be used, use the reserved keyword
                    'ALLCARRIERS'.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="businessName" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    The business name of the mobile ad.
                    Must not exceed 20 characters except for ads targeted
                    to Japan which must not exceed 10 Japanese characters.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="countryCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    The &lt;a href="adwords_api_countries.html"&gt;country code&lt;/a&gt;
                    for the phone number in the click-to-call mobile ad.
                    The click-to-call ad will appear only in this country.
                    The countryCode will be used to verify the phone number
                    format, as well validate the targeted mobile carriers.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="phoneNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    The phone number for use in click-to-call.
                    Must not exceed 20 characters.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="Money">
        <xsd:annotation>
          <xsd:documentation>
            Represents a money amount.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ComparableValue">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="microAmount" type="xsd:long">
                <xsd:annotation>
                  <xsd:documentation>
                    Amount in micros. One million is equivalent to one unit.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="NetworkTarget">
        <xsd:annotation>
          <xsd:documentation>
            Immutable structure to hold a network coverage target.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Target">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="networkCoverageType" type="tns:NetworkCoverageType">
                <xsd:annotation>
                  <xsd:documentation>
                    Type of network to be covered.
                    &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="NewEntityCreationError">
        <xsd:annotation>
          <xsd:documentation>
            Error associated with creation of new entities using
            {@link com.google.ads.api.services.common.id.TempId}s.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:NewEntityCreationError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="NotEmptyError">
        <xsd:annotation>
          <xsd:documentation>
            A list of all errors associated with the @NotEmpty constraints.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:NotEmptyError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="NotWhitelistedError">
        <xsd:annotation>
          <xsd:documentation>
            Indicates that the customer is not whitelisted for accessing the API.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:NotWhitelistedError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="NullError">
        <xsd:annotation>
          <xsd:documentation>
            Errors associated with contents not null constraint.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:NullError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="NumberValue" abstract="true">
        <xsd:annotation>
          <xsd:documentation>
            Number value types for constructing number valued ranges.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ComparableValue">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="OperationAccessDenied">
        <xsd:annotation>
          <xsd:documentation>
            Unauthorized access errors as determined by the invoked service's
            access policy.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:OperationAccessDenied.Reason" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="Paging">
        <xsd:annotation>
          <xsd:documentation>
            Specifies what kind of paging wanted for the result of a get.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="startIndex" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>
                Index of the first result to be returned.
                &lt;span class="constraint InRange"&gt;This field must be between 0.0 and 2.147483647E9, inclusive.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="numberResults" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>
                Number of results, following the first result, to return starting from the one specified by
                {@code startIndex}.
                &lt;span class="constraint InRange"&gt;This field must be between 0.0 and 2.147483647E9, inclusive.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PagingError">
        <xsd:annotation>
          <xsd:documentation>
            Error codes for pagination.
            See {@link com.google.ads.api.services.common.pagination.Paging}.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:PagingError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="PlatformTarget">
        <xsd:annotation>
          <xsd:documentation>
            Immutable structure to hold a platform target.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Target">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="platformType" type="tns:PlatformType">
                <xsd:annotation>
                  <xsd:documentation>
                    Type of device platform to be targeted
                    &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="PolicyViolationError.Part">
        <xsd:annotation>
          <xsd:documentation>
            Points to a substring within an ad field or criterion.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="index" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>
                Index of the starting position of the violating text within the line.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="length" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>
                The length of the violating text.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PolicyViolationKey">
        <xsd:annotation>
          <xsd:documentation>
            Key of the violation. The key is used for referring to a violation when
            filing an exemption request.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="policyName" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Unique id of the violated policy.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="violatingText" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                The text that violates the policy if specified. Otherwise, refers to the
                policy in general (e.g. when requesting to be exempt from the whole
                policy).
                
                May be null, in which case this refers to the whole policy.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PolygonTarget">
        <xsd:annotation>
          <xsd:documentation>
            Structure to specify a geographic target for a polygon location.
            
            This polygon target consists of a list of vertices;
            each vertex is a geo point defined by a latitude and longitude.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:GeoTarget">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="vertices" type="tns:GeoPoint">
                <xsd:annotation>
                  <xsd:documentation>
                    List of geo points that define the polygon.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ProvinceTarget">
        <xsd:annotation>
          <xsd:documentation>
            Immutable structure to specify a geographic target for a province or state.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:GeoTarget">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="provinceCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Province or state code.
                    &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                    &lt;span class="constraint StringLength"&gt;This string must not be empty.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ProximityTarget">
        <xsd:annotation>
          <xsd:documentation>
            Structure to specify a geographic target for a proximity location.
            
            This proximity target doesn't support taking in an address location in place of a lat/long,
            geocoding it, and creating a proximity target for the campaign like AWFE does.
            The caller must ensure the address fields are valid and consistent with the supplied lat/long.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:GeoTarget">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="geoPoint" type="tns:GeoPoint">
                <xsd:annotation>
                  <xsd:documentation>
                    Latitude and longitude.
                    &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="radiusDistanceUnits" type="tns:ProximityTarget.DistanceUnits">
                <xsd:annotation>
                  <xsd:documentation>
                    Radius distance units.
                    &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="radiusInUnits" type="xsd:double">
                <xsd:annotation>
                  <xsd:documentation>
                    Radius expressed in distance units.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="address" type="tns:Address">
                <xsd:annotation>
                  <xsd:documentation>
                    Full address; &lt;code&gt;null&lt;/code&gt; if unknonwn.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="allowServiceOfAddress" type="xsd:boolean">
                <xsd:annotation>
                  <xsd:documentation>
                    True iff address is allowed to be served.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="QuotaCheckError">
        <xsd:annotation>
          <xsd:documentation>
            Encapsulates the errors thrown during developer quota checks.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:QuotaCheckError.Reason" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="QuotaExceededError">
        <xsd:annotation>
          <xsd:documentation>
            Represents Quota Exceeded Error.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:QuotaExceededError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ReadOnlyError">
        <xsd:annotation>
          <xsd:documentation>
            A list of all errors associated with the @ReadOnly constraint.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:ReadOnlyError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="RequiredError">
        <xsd:annotation>
          <xsd:documentation>
            Errors due to missing required field.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:RequiredError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="SizeLimitError">
        <xsd:annotation>
          <xsd:documentation>
            Indicates that the number of entries in the request or response exceeds the system limit.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:SizeLimitError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="SoapHeader">
        <xsd:annotation>
          <xsd:documentation>
            Defines the required and optional elements within the header of a SOAP request.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="applicationToken" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Application token to identify the caller making the call can access a valid
                application repository in ads.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="authToken" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Authentication token from Google ClientLogin API. Developers need to authenticate themselves
                with that API before they can send a request to AdWords API. This header identifies either the
                MCC manager acting on behalf of their client, or the advertiser managing their own account.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="clientCustomerId" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Optional header: the external customer id of the client of the MCC manager. Applicable only
                if an MCC manager, as identified by authToken, is acting on behalf of their client.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="clientEmail" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Optional header: the login email of a client of the MCC manager. Applicable only
                if an MCC manager, as identified by authToken, is acting on behalf of their client.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="developerToken" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Developer token to identify that the person making the call has enough
                quota.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="userAgent" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                UserAgent is used to track distribution of API client programs and
                application usage. The client is responsible for putting in a meaningful
                value for tracking purposes. To be clear this is not the same as an HTTP
                user agent.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="validateOnly" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                Used to validate the request without executing it.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SoapResponseHeader">
        <xsd:annotation>
          <xsd:documentation>
            Defines the elements within the header of a SOAP response.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="requestId" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Unique id that identifies this request. If developers have any support issues, sending us
                this id will enable us to find their request more easily.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="operations" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                Number of operations performed for this SOAP request.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="responseTime" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                Elapsed time in milliseconds between the AdWords API receiving the request and sending the
                response.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="units" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                Total number of API units the SOAP request used.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="StatsQueryError">
        <xsd:annotation>
          <xsd:documentation>
            Represents possible error codes when querying for stats.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:StatsQueryError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="StatsSelector">
        <xsd:annotation>
          <xsd:documentation>
            Selects statistics for date range.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="dateRange" type="tns:DateRange">
            <xsd:annotation>
              <xsd:documentation>
                Date range to get stats for. "All time" if unspecified.
                &lt;span class="constraint DateRangeWithinRange"&gt;This range must be contained within the range [1970-01-01, 2038-01-01].&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="StatsSelector.Type" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                This field indicates the subtype of StatsSelector of this instance.  It is ignored
                on input, and instead xsi:type should be specified.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TempAdUnionId">
        <xsd:annotation>
          <xsd:documentation>
            Represents the temporary id for an ad union id, which the user can specify.
            The temporary id can be used to group ads together during ad creation.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:AdUnionId">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="TextAd">
        <xsd:annotation>
          <xsd:documentation>
            Represents a TextAd.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Ad">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="headline" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    The headline of the ad
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="description1" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    The first description line
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="description2" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    The second description line
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="Video">
        <xsd:annotation>
          <xsd:documentation>
            Encapsulates a Video media identified by a MediaId
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Media">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="durationMillis" type="xsd:long">
                <xsd:annotation>
                  <xsd:documentation>
                    The duration of the associated video, in milliseconds.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="streamingUrl" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Streaming url for the video.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="readyToPlayOnTheWeb" type="xsd:boolean">
                <xsd:annotation>
                  <xsd:documentation>
                    Indicates whether the video is ready to play on the web
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="industryStandardCommercialIdentifier" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    The Industry Standard Commercial Identifier code for this media, used
                    mainly for television commercials.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="advertisingId" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    The Advertising Digital Identification code for this media, as defined by
                    the American Association of Advertising Agencies, used mainly for
                    television commercials..
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="AdUnionId">
        <xsd:annotation>
          <xsd:documentation>
            Represents an id indicating a grouping of Ads under some heuristic.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                The ID of the ad union
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="AdUnionId.Type" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                This field indicates the subtype of AdUnionId of this instance.  It is ignored
                on input, and instead xsi:type should be specified.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ComparableValue" abstract="true">
        <xsd:annotation>
          <xsd:documentation>
            Comparable types for constructing ranges with.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="ComparableValue.Type" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                This field indicates the subtype of ComparableValue of this instance.  It is ignored
                on input, and instead xsi:type should be specified.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DemographicTarget" abstract="true">
        <xsd:annotation>
          <xsd:documentation>
            Abstract class to identify a demographic target.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Target">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="bidModifier" type="xsd:int">
                <xsd:annotation>
                  <xsd:documentation>
                    The bid modifier for the current age or gender segment.
                    It is expressed as an addition percentage.
                    Its value should lie in between 0 and 500.
                    The new bid will be: (100 + bidModifier)% * bid.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ExemptionRequest">
        <xsd:annotation>
          <xsd:documentation>
            A request to be exempted from a {@link PolicyViolationError}.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="key" type="tns:PolicyViolationKey">
            <xsd:annotation>
              <xsd:documentation>
                Identifies the violation to request an exemption for.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="GeoTarget" abstract="true">
        <xsd:annotation>
          <xsd:documentation>
            Abstract class to identify a geographic target.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Target">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="excluded" type="xsd:boolean">
                <xsd:annotation>
                  <xsd:documentation>
                    Target is to be excluded if set; default is to be included.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="Media">
        <xsd:annotation>
          <xsd:documentation>
            Represents any media (e.g., image).
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="mediaId" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                Media id; Optional; E.g., image ads don't have a mediaId.
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null} when it is contained within {@link Operator}s : SET, REMOVE.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="mediaTypeDb" type="tns:Media.MediaType">
            <xsd:annotation>
              <xsd:documentation>
                The type of the media
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set for following {@link Operator}s : SET, REMOVE.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="referenceId" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                Media reference id key
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set for following {@link Operator}s : SET, REMOVE.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="dimensions" type="tns:Media_Size_DimensionsMapEntry">
            <xsd:annotation>
              <xsd:documentation>
                Various dimension sizes for the media.  Only applies to image media (and video media for
                video thumbnails).
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="urls" type="tns:Media_Size_StringMapEntry">
            <xsd:annotation>
              <xsd:documentation>
                Urls pointing to the resized media for the given sizes.  Only applies to image media.
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="mimeType" type="tns:Media.MimeType">
            <xsd:annotation>
              <xsd:documentation>
                The mime type of the media.  Only applies to image media.
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set for following {@link Operator}s : SET, REMOVE.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="sourceUrl" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                The url where the orginal media was downloaded from (or a file name).
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set for following {@link Operator}s : SET, REMOVE.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="mediaSubType" type="tns:Media.MediaSubType">
            <xsd:annotation>
              <xsd:documentation>
                The subtype of the media
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set for following {@link Operator}s : SET, REMOVE.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="name" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                The name of the media
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="fileSize" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                The size of the media file in bytes
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set for following {@link Operator}s : SET, REMOVE.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="extendedCapabilities" type="tns:Media_MediaExtendedCapabilityType_Media_MediaExtendedCapabilityStateMapEntry">
            <xsd:annotation>
              <xsd:documentation>
                Media extended capabilities (i.e. transcode types and statuses).  This is not updatable
                and not specifiable.
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set for following {@link Operator}s : SET, REMOVE.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="creationTime" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Media creation date.  This is not updatable and not specifiable.
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set for following {@link Operator}s : SET, REMOVE.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="Media.Type" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                This field indicates the subtype of Media of this instance.  It is ignored
                on input, and instead xsi:type should be specified.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MobileImageAd">
        <xsd:annotation>
          <xsd:documentation>
            Data associated with a mobile image ad.
            
            &lt;h2 class="normalsize"&gt;More Information&lt;/h2&gt;
            &lt;ul class="nolist"&gt;
            &lt;li&gt;
            &lt;a href="https://adwords.google.com/select/mobileguidelines.html"
            target="_blank"&gt;Mobile Ad Editorial Guidelines&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;
            &lt;a href="http://adwords.google.com/support/bin/topic.py?topic=8500"
            target="_blank"&gt;Mobile Ad FAQ&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Ad">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="markupLanguages" type="tns:MarkupLanguageType">
                <xsd:annotation>
                  <xsd:documentation>
                    The list of markup languages to use for the mobile ad.
                    &lt;p&gt;
                    Values are:
                    &lt;ul&gt;
                    &lt;li&gt;CHTML
                    &lt;li&gt;HTML
                    &lt;li&gt;WML
                    &lt;li&gt;XHTML
                    &lt;/ul&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="mobileCarriers" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    The list of mobile carriers to use for the mobile ad.  Each string
                    must be of the form 'CarrierName@CountryCode'. To specify that
                    all available carriers are to be used, use the reserved keyword
                    'ALLCARRIERS'.
                    &lt;p&gt;
                    Values are listed in the 
                    {@link /apis/adwords/docs/developer/MobileImageAd.html v13 docs}.
                    &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="image" type="tns:Image" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="PolicyViolationError">
        <xsd:annotation>
          <xsd:documentation>
            Represents violations of a single policy by some text in a field.
            
            Violations of a single policy by the same string in multiple places
            within a field is reported in one instace of this class and only one
            exemption needs to be filed.
            Violations of a single policy by two different strings is reported
            as two separate instances of this class.
            
            e.g. If 'ACME' violates 'capitalization' and occurs twice in a text ad it
            would be represented by one instance. If the ad also contains 'INC' which
            also violates 'capitalization' it would be represented in a separate
            instance.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="key" type="tns:PolicyViolationKey">
                <xsd:annotation>
                  <xsd:documentation>
                    Unique identifier for the violation.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="externalPolicyName" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Name of policy suitable for display to users. In the user's preferred
                    language.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="externalPolicyUrl" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Url with writeup about the policy.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="externalPolicyDescription" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Localized description of the violation.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="isExemptable" type="xsd:boolean">
                <xsd:annotation>
                  <xsd:documentation>
                    Whether user can file an exemption request for this violation.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="violatingParts" type="tns:PolicyViolationError.Part">
                <xsd:annotation>
                  <xsd:documentation>
                    Lists the parts that violate the policy.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="Stats">
        <xsd:annotation>
          <xsd:documentation>
            Statistics about an ad or criterion within an adgroup or campaign.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="startDate" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Starting date (inclusive) of the statistics.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="endDate" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Ending date (inclusive) of the statistics.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="network" type="tns:Stats.Network">
            <xsd:annotation>
              <xsd:documentation>
                The ad network which the stats are for.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="clicks" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                Number of clicks.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="impressions" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                Number of impressions.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="cost" type="tns:Money">
            <xsd:annotation>
              <xsd:documentation>
                Cost.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="averagePosition" type="xsd:double">
            <xsd:annotation>
              <xsd:documentation>
                Average position of ads.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="averageCpc" type="tns:Money">
            <xsd:annotation>
              <xsd:documentation>
                Average Cost Per Conversion.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="averageCpm" type="tns:Money">
            <xsd:annotation>
              <xsd:documentation>
                Average Cost Per Impression.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="ctr" type="xsd:double">
            <xsd:annotation>
              <xsd:documentation>
                Click Through Rate.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="conversions" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                Number of conversions.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="conversionRate" type="xsd:double">
            <xsd:annotation>
              <xsd:documentation>
                Conversion Rate.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="costPerConversion" type="tns:Money">
            <xsd:annotation>
              <xsd:documentation>
                Cost per Conversion.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="conversionsManyPerClick" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                Number of conversions (many-per-click).
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="conversionRateManyPerClick" type="xsd:double">
            <xsd:annotation>
              <xsd:documentation>
                Conversion Rate (many-per-click).
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="costPerConversionManyPerClick" type="tns:Money">
            <xsd:annotation>
              <xsd:documentation>
                Cost per Conversion (many-per-click).
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="Stats.Type" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                This field indicates the subtype of Stats of this instance.  It is ignored
                on input, and instead xsi:type should be specified.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Target" abstract="true">
        <xsd:annotation>
          <xsd:documentation>
            Target abstract class.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="Target.Type" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                This field indicates the subtype of Target of this instance.  It is ignored
                on input, and instead xsi:type should be specified.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TemplateElementField">
        <xsd:annotation>
          <xsd:documentation>
            Represents a field in a template element.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="name" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                The name of this field
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="type" type="tns:TemplateElementField.Type">
            <xsd:annotation>
              <xsd:documentation>
                The type of this field
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="fieldText" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Text value for text field types. Null if not text field.
                The field is a text field if type is ADDRESS, ENUM, TEXT, URL,
                or VISIBLE_URL.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="fieldMedia" type="tns:Media">
            <xsd:annotation>
              <xsd:documentation>
                Media value for non-text field types. Null if a text field. This
                fields must be specified if fieldText is null.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ApiError" abstract="true">
        <xsd:annotation>
          <xsd:documentation>
            A service api error base class that provides error details.
            1) the OGNL field path is provided for parsers.
            2) the OGNL field path with debug comments easily helps track causes.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="fieldPath" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                The OGNL field path to identify cause of error.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="trigger" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                The data that caused the error.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="ApiError.Type" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                This field indicates the subtype of ApiError of this instance.  It is ignored
                on input, and instead xsi:type should be specified.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ApiException">
        <xsd:annotation>
          <xsd:documentation>
            Exception class for holding a list of service errors.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApplicationException">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="errors" type="tns:ApiError">
                <xsd:annotation>
                  <xsd:documentation>
                    List of errors.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ApplicationException">
        <xsd:annotation>
          <xsd:documentation>
            Base class for exceptions.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="message" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Error message.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="ApplicationException.Type" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                This field indicates the subtype of ApplicationException of this instance.  It is ignored
                on input, and instead xsi:type should be specified.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ImageAd">
        <xsd:annotation>
          <xsd:documentation>
            Represents an ImageAd.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Ad">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="image" type="tns:Image">
                <xsd:annotation>
                  <xsd:documentation>
                    The image data for the ad
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="name" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    The name label for this ad
                    &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="LocalBusinessAd">
        <xsd:annotation>
          <xsd:documentation>
            Represents Legacy Local Business Ad
            
            Legacy LBAs can be deleted or paused/unpaused, but are not editable.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Ad">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="fullBusinessName" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Full business name of the ad.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="phoneNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Phone number associated with the ad.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="streetAddress" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Street address of the ad.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="city" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    City of the ad.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="region" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Region name of the ad.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="regionCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Region code of the ad.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="postalCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Postal code of the ad.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="countryCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Country of the ad.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="businessName" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Headline/Business name of the local business ad. It's limited to 25
                    characters.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="description1" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    The first line of description text in the ad. Limited to 35 characters.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="description2" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    The second line of description text in the ad. Limited to 35 characters.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="target" type="tns:ProximityTarget">
                <xsd:annotation>
                  <xsd:documentation>
                    Geographic target with latitude/longitude
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="businessImage" type="tns:Image">
                <xsd:annotation>
                  <xsd:documentation>
                    Business image of the ad.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="icon" type="tns:Image">
                <xsd:annotation>
                  <xsd:documentation>
                    Icon for the ad.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="TemplateElement">
        <xsd:annotation>
          <xsd:documentation>
            Represents an element in a template. Each template element is composed
            of a list of fields (actual value data).
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="uniqueName" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Unique name for this element.
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="fields" type="tns:TemplateElementField">
            <xsd:annotation>
              <xsd:documentation>
                List of fields to use for this template element.
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="AdGroupAdSelector">
        <xsd:annotation>
          <xsd:documentation>
            Specifies criteria for selecting a set of AdGroupAds for the account.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="campaignIds" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                Ads returned will be from campaigns whose ids are included in this list.
                An empty list means there are no campaign restrictions when selecting
                AdGroupAds.
                &lt;span class="constraint ContentsDistinct"&gt;This field must contain distinct elements.&lt;/span&gt;
                &lt;span class="constraint ContentsNotNull"&gt;This field must not contain {@code null} elements.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="adGroupIds" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                Ads returned will be from adgroups whose ids are included in this list.
                An empty list means there are no adgroup restrictions when selecting
                AdGroupAds.
                &lt;span class="constraint ContentsDistinct"&gt;This field must contain distinct elements.&lt;/span&gt;
                &lt;span class="constraint ContentsNotNull"&gt;This field must not contain {@code null} elements.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="adIds" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                Ads returned will be from ads whose ids are included in this list.
                An empty list means there are no ad id restrictions when selecting
                AdGroupAds.
                &lt;span class="constraint ContentsDistinct"&gt;This field must contain distinct elements.&lt;/span&gt;
                &lt;span class="constraint ContentsNotNull"&gt;This field must not contain {@code null} elements.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="statsSelector" type="tns:AdStatsSelector">
            <xsd:annotation>
              <xsd:documentation>
                Indicates to have stats returned along with the ad.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="paging" type="tns:Paging">
            <xsd:annotation>
              <xsd:documentation>
                Specifies paging specific parameters for paging the return list.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TemplateAd">
        <xsd:annotation>
          <xsd:documentation>
            Represents a TemplateAd. A template ad is composed of a template (specified
            by it's template id) along with all the elements to populate the
            template's fields.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Ad">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="templateId" type="xsd:long">
                <xsd:annotation>
                  <xsd:documentation>
                    Indicates the Ad's template
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="adUnionId" type="tns:AdUnionId">
                <xsd:annotation>
                  <xsd:documentation>
                    Group id of all template ads, which should be created together.
                    All template ads in the same union contain the same data,
                    but have different dimensions. Single ads do not have a union id.
                    If a template ad specifies an ad union with only one ad, no union
                    will be created.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="templateElements" type="tns:TemplateElement">
                <xsd:annotation>
                  <xsd:documentation>
                    List of elements consisting of fields. Order is only relevent between
                    elements of the same type. There is no ordering requirement for
                    elements of different types.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="dimensions" type="tns:Dimensions">
                <xsd:annotation>
                  <xsd:documentation>
                    The dimensions for this ad.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="name" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Name of ad
                    &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="duration" type="xsd:int">
                <xsd:annotation>
                  <xsd:documentation>
                    Duration of ad if it contains playable media
                    &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="Ad">
        <xsd:annotation>
          <xsd:documentation>
            The base class of all Ad types.  Not abstract since it is conceivable for
            the base attributes of an Ad to be updated without reference to its concrete
            type.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                ID of Ad
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set for following {@link Operator}s : ADD.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="url" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Destination URL
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="displayUrl" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Visible URL
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="approvalStatus" type="tns:Ad.ApprovalStatus">
            <xsd:annotation>
              <xsd:documentation>
                Approval status
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="disapprovalReasons" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                List of disapproval reasons
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="Ad.Type" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                This field indicates the subtype of Ad of this instance.  It is ignored
                on input, and instead xsi:type should be specified.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="AdGroupAd">
        <xsd:annotation>
          <xsd:documentation>
            Represents an ad in an ad group.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="adGroupId" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                The id of the adgroup containing this ad.
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="ad" type="tns:Ad">
            <xsd:annotation>
              <xsd:documentation>
                The contents of the ad itself.
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="status" type="tns:AdGroupAd.Status">
            <xsd:annotation>
              <xsd:documentation>
                The status of the ad.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="stats" type="tns:AdStats">
            <xsd:annotation>
              <xsd:documentation>
                Statistics about this ad.
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="AdGroupAdOperation">
        <xsd:annotation>
          <xsd:documentation>
            AdGroupAd service operations.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Operation">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="operand" type="tns:AdGroupAd">
                <xsd:annotation>
                  <xsd:documentation>
                    AdGroupAd to operate on
                    &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="exemptionRequests" type="tns:ExemptionRequest">
                <xsd:annotation>
                  <xsd:documentation>
                    Exemption requests for any policy violations in this Ad.  This field is
                    only used for ADD operations
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="AdGroupAdPage">
        <xsd:annotation>
          <xsd:documentation>
            Represents a page of {@link AdGroupAd}s resulting from the query done by
            {@link AdGroupAdService}.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Page">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="entries" type="tns:AdGroupAd">
                <xsd:annotation>
                  <xsd:documentation>
                    The result entries in this page.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="AdGroupAdReturnValue">
        <xsd:annotation>
          <xsd:documentation>
            A container for return values from the AdGroupAdService.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ListReturnValue">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="value" type="tns:AdGroupAd" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ListReturnValue" abstract="true">
        <xsd:annotation>
          <xsd:documentation>
            Base list return value type.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="ListReturnValue.Type" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                This field indicates the subtype of ListReturnValue of this instance.  It is ignored
                on input, and instead xsi:type should be specified.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Operation" abstract="true">
        <xsd:annotation>
          <xsd:documentation>
            This represents an operation that includes an operator and an operand
            specified type.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="operator" type="tns:Operator">
            <xsd:annotation>
              <xsd:documentation>
                Operator.
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="Operation.Type" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                This field indicates the subtype of Operation of this instance.  It is ignored
                on input, and instead xsi:type should be specified.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Page" abstract="true">
        <xsd:annotation>
          <xsd:documentation>
            Contains the results from a get call.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="totalNumEntries" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>
                Total number of entries in the result that this page is a part of.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="Page.Type" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                This field indicates the subtype of Page of this instance.  It is ignored
                on input, and instead xsi:type should be specified.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Ad.ApprovalStatus">
        <xsd:annotation>
          <xsd:documentation>
            Approval status for Creatives. 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="APPROVED">
            <xsd:annotation>
              <xsd:documentation>
                Approved 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="FAMILY_SAFE">
            <xsd:annotation>
              <xsd:documentation>
                Approved - famiy safe 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="NON_FAMILY_SAFE">
            <xsd:annotation>
              <xsd:documentation>
                Approved - non-family safe 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="PORN">
            <xsd:annotation>
              <xsd:documentation>
                Approved - adult content 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="UNCHECKED">
            <xsd:annotation>
              <xsd:documentation>
                Pending review 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="DISAPPROVED">
            <xsd:annotation>
              <xsd:documentation>
                Disapproved 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="AdError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the target error. 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="APPROXIMATELY_TOO_LONG">
            <xsd:annotation>
              <xsd:documentation>
                Estimating character sizes the string is too long. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="APPROXIMATELY_TOO_SHORT">
            <xsd:annotation>
              <xsd:documentation>
                Estimating character sizes the string is too short. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CANNOT_SET_BUSINESS_NAME_IF_URL_SET">
            <xsd:annotation>
              <xsd:documentation>
                business name and url cannot be set at the same time 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CUSTOMER_NOT_APPROVED_MOBILEADS">
            <xsd:annotation>
              <xsd:documentation>
                Customer is not approved for mobile ads. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CUSTOMER_NOT_APPROVED_THIRDPARTY_ADS">
            <xsd:annotation>
              <xsd:documentation>
                Customer is not approved for 3PAS richmedia ads. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CUSTOMER_NOT_APPROVED_THIRDPARTY_REDIRECT_ADS">
            <xsd:annotation>
              <xsd:documentation>
                Customer is not approved for 3PAS redirect richmedia (Ad Exchange) ads. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CUSTOMER_NOT_ELIGIBLE_FOR_UPDATING_BEACON_URL">
            <xsd:annotation>
              <xsd:documentation>
                Customer is not eligible for updating beacon url 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="DIMENSION_ALREADY_IN_UNION">
            <xsd:annotation>
              <xsd:documentation>
                There already exists an ad with the same dimensions in the union. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="DIMENSION_MUST_BE_SET">
            <xsd:annotation>
              <xsd:documentation>
                Ad's dimension must be set before setting union dimension. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="DIMENSION_NOT_IN_UNION">
            <xsd:annotation>
              <xsd:documentation>
                Ad's dimension must be included in the union dimensions. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="DOMESTIC_PHONE_NUMBER_FORMAT">
            <xsd:annotation>
              <xsd:documentation>
                Telephone number contains invalid characters or invalid format.
                Please re-enter your number using digits (0-9), dashes (-), and parentheses only. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="EMERGENCY_PHONE_NUMBER">
            <xsd:annotation>
              <xsd:documentation>
                Emergency telephone numbers are not allowed.
                Please enter a valid domestic phone number to connect customers to your business. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="EMPTY_FIELD">
            <xsd:annotation>
              <xsd:documentation>
                A required field was not specified or is an empty string. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INCONSISTENT_STATUS_IN_TEMPLATE_UNION">
            <xsd:annotation>
              <xsd:documentation>
                The status cannot differ among template ads of the same union. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INCORRECT_LENGTH">
            <xsd:annotation>
              <xsd:documentation>
                The length of the string is not valid. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_AD_ADDRESS_CAMPAIGN_TARGET">
            <xsd:annotation>
              <xsd:documentation>
                User cannot create mobile ad for countries targeted in specified campaign. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_AD_TYPE">
            <xsd:annotation>
              <xsd:documentation>
                Invalid Ad type. A specific type of Ad is required. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_ATTRIBUTES_FOR_MOBILE_IMAGE">
            <xsd:annotation>
              <xsd:documentation>
                Headline, description or phone cannot be present when creating mobile image ad. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_ATTRIBUTES_FOR_MOBILE_TEXT">
            <xsd:annotation>
              <xsd:documentation>
                Image cannot be present when creating mobile text ad. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_COUNTRY_CODE">
            <xsd:annotation>
              <xsd:documentation>
                Creative's country code is not valid. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_INPUT">
            <xsd:annotation>
              <xsd:documentation>
                An input error whose real reason was not properly mapped (should not happen). 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_MARKUP_LANGUAGE">
            <xsd:annotation>
              <xsd:documentation>
                An invalid markup language was entered. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_MOBILE_CARRIER">
            <xsd:annotation>
              <xsd:documentation>
                An invalid mobile carrier was entered. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_MOBILE_CARRIER_TARGET">
            <xsd:annotation>
              <xsd:documentation>
                Specified mobile carriers target a country not targeted by the campaign. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_NUMBER_OF_ELEMENTS">
            <xsd:annotation>
              <xsd:documentation>
                Wrong number of elements for given element type 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_PHONE_NUMBER_FORMAT">
            <xsd:annotation>
              <xsd:documentation>
                The format of the telephone number is incorrect.
                Please re-enter the number using the correct format. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_TEMPLATE_DATA">
            <xsd:annotation>
              <xsd:documentation>
                The template ad data contains validation errors. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_TEMPLATE_ELEMENT_FIELD_TYPE">
            <xsd:annotation>
              <xsd:documentation>
                The template field doesn't have have the correct type. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_TEMPLATE_ID">
            <xsd:annotation>
              <xsd:documentation>
                Invalid template id. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="LINE_TOO_WIDE">
            <xsd:annotation>
              <xsd:documentation>
                After substituting replacement strings, the line is too wide. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MARKUP_LANGUAGES_PRESENT">
            <xsd:annotation>
              <xsd:documentation>
                When entering a markup language the Destination URL must be entered. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_ADDRESS_COMPONENT">
            <xsd:annotation>
              <xsd:documentation>
                Missing address component in template element address field. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_ADVERTISEMENT_NAME">
            <xsd:annotation>
              <xsd:documentation>
                An ad name must be entered. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_BUSINESS_NAME">
            <xsd:annotation>
              <xsd:documentation>
                Business name must be entered. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_DESCRIPTION1">
            <xsd:annotation>
              <xsd:documentation>
                Description (line 2) must be entered. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_DESCRIPTION2">
            <xsd:annotation>
              <xsd:documentation>
                Description (line 3) must be entered. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_DESTINATION_URL">
            <xsd:annotation>
              <xsd:documentation>
                A destination URL must be entered. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_DIMENSION">
            <xsd:annotation>
              <xsd:documentation>
                A valid dimension must be specified for this ad. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_DISPLAY_URL">
            <xsd:annotation>
              <xsd:documentation>
                A display URL must be entered. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_HEADLINE">
            <xsd:annotation>
              <xsd:documentation>
                Headline must be entered. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_HEIGHT">
            <xsd:annotation>
              <xsd:documentation>
                A height must be entered.  
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_IMAGE">
            <xsd:annotation>
              <xsd:documentation>
                An image must be entered. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_MARKUP_LANGUAGES">
            <xsd:annotation>
              <xsd:documentation>
                The markup language in which your site is written must be entered. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_MOBILE_CARRIER">
            <xsd:annotation>
              <xsd:documentation>
                A mobile carrier must be entered. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_PHONE">
            <xsd:annotation>
              <xsd:documentation>
                Phone number must be entered. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_REQUIRED_TEMPLATE_FIELDS">
            <xsd:annotation>
              <xsd:documentation>
                Missing required template fields 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_TEMPLATE_FIELD_VALUE">
            <xsd:annotation>
              <xsd:documentation>
                Missing a required field value 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_TEXT">
            <xsd:annotation>
              <xsd:documentation>
                The ad must have text. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_URL_AND_PHONE">
            <xsd:annotation>
              <xsd:documentation>
                Ad must link to a mobile web page or connect users to your business telephone, or both.
                Please enter a mobile Destination URL and/or a business telephone number. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_VISIBLE_URL">
            <xsd:annotation>
              <xsd:documentation>
                A visible URL must be entered. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_WIDTH">
            <xsd:annotation>
              <xsd:documentation>
                A width must be entered.  
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MUST_USE_TEMP_AD_UNION_ID_ON_ADD">
            <xsd:annotation>
              <xsd:documentation>
                TempAdUnionId must be use when adding template ads. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="TOO_LONG">
            <xsd:annotation>
              <xsd:documentation>
                The string has too many characters. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="TOO_SHORT">
            <xsd:annotation>
              <xsd:documentation>
                The string has too few characters. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="UNION_DIMENSIONS_CANNOT_CHANGE">
            <xsd:annotation>
              <xsd:documentation>
                Ad union dimensions cannot change for saved ads. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="UNKNOWN_ADDRESS_COMPONENT">
            <xsd:annotation>
              <xsd:documentation>
                Address component is not {country, lat, lng}. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="UNKNOWN_FIELD_NAME">
            <xsd:annotation>
              <xsd:documentation>
                Unknown unique field name 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="UNKNOWN_UNIQUE_NAME">
            <xsd:annotation>
              <xsd:documentation>
                Unknown unique name (template element type specifier) 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="UNSUPPORTED_DIMENSIONS">
            <xsd:annotation>
              <xsd:documentation>
                Unsupported ad dimension 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="URL_INVALID_TOP_LEVEL_DOMAIN">
            <xsd:annotation>
              <xsd:documentation>
                URL ends with an invalid top-level domain name. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="URL_MALFORMED">
            <xsd:annotation>
              <xsd:documentation>
                URL contains illegal characters. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="URL_NO_HOST">
            <xsd:annotation>
              <xsd:documentation>
                URL must contain a host name. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="URL_NO_SCHEME">
            <xsd:annotation>
              <xsd:documentation>
                URL must start with a scheme. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="URL_NO_TOP_LEVEL_DOMAIN">
            <xsd:annotation>
              <xsd:documentation>
                URL should end in a valid domain extension, such as .com or .net. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="URL_PATH_NOT_ALLOWED">
            <xsd:annotation>
              <xsd:documentation>
                URL must not end with a path. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="URL_PORT_NOT_ALLOWED">
            <xsd:annotation>
              <xsd:documentation>
                URL must not specify a port. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="URL_QUERY_NOT_ALLOWED">
            <xsd:annotation>
              <xsd:documentation>
                URL must not contain a query. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="USER_DOES_NOT_HAVE_ACCESS_TO_TEMPLATE">
            <xsd:annotation>
              <xsd:documentation>
                The user does not have permissions to create a template ad for the given
                template.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_FORMAT">
            <xsd:annotation>
              <xsd:documentation>
                Format is invalid 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="ELEMENT_NOT_PRESENT">
            <xsd:annotation>
              <xsd:documentation>
                Template element is mising 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="IMAGE_ERROR">
            <xsd:annotation>
              <xsd:documentation>
                Error occurred during image processing 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="VALUE_NOT_IN_RANGE">
            <xsd:annotation>
              <xsd:documentation>
                The value is not within the valid range 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="FIELD_NOT_PRESENT">
            <xsd:annotation>
              <xsd:documentation>
                Template element field is not present 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="ADDRESS_NOT_COMPLETE">
            <xsd:annotation>
              <xsd:documentation>
                Address is incomplete 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="ADDRESS_INVALID">
            <xsd:annotation>
              <xsd:documentation>
                Invalid address 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="VIDEO_RETRIEVAL_ERROR">
            <xsd:annotation>
              <xsd:documentation>
                Error retrieving specified video 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="AUDIO_ERROR">
            <xsd:annotation>
              <xsd:documentation>
                Error processing audio 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_YOUTUBE_DISPLAY_URL">
            <xsd:annotation>
              <xsd:documentation>
                Display URL is incorrect for YouTube PYV ads 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="AdGroupAd.Status">
        <xsd:annotation>
          <xsd:documentation>
            The current status of an Ad.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="ENABLED" />
          <xsd:enumeration value="PAUSED" />
          <xsd:enumeration value="DISABLED" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="AdGroupAdError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the target error. 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="AD_NOT_UNDER_ADGROUP">
            <xsd:annotation>
              <xsd:documentation>
                The specified ad was not found in the adgroup 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CANNOT_OPERATE_ON_DELETED_ADGROUPAD">
            <xsd:annotation>
              <xsd:documentation>
                Deleted ads may not be modified 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CANNOT_CREATE_DEPRECATED_ADS">
            <xsd:annotation>
              <xsd:documentation>
                An ad of this type is deprecated and cannot be created. Only deletions
                are permitted.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="EMPTY_FIELD">
            <xsd:annotation>
              <xsd:documentation>
                A required field was not specified or is an empty string. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="ENTITY_REFERENCED_IN_MULTIPLE_OPS">
            <xsd:annotation>
              <xsd:documentation>
                An ad may only be modified once per call 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="UNSUPPORTED_OPERATION">
            <xsd:annotation>
              <xsd:documentation>
                The specified operation is not supported.  Only ADD, SET, and REMOVE
                are supported
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="AgeTarget.Age">
        <xsd:annotation>
          <xsd:documentation>
            Age segments. 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="AGE_0_17">
            <xsd:annotation>
              <xsd:documentation>
                The 0-17 age segment. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="AGE_18_24">
            <xsd:annotation>
              <xsd:documentation>
                The 18-24 age segment. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="AGE_25_34">
            <xsd:annotation>
              <xsd:documentation>
                The 25-34 age segment. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="AGE_35_44">
            <xsd:annotation>
              <xsd:documentation>
                The 35-44 age segment. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="AGE_45_54">
            <xsd:annotation>
              <xsd:documentation>
                The 45-54 age segment. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="AGE_55_64">
            <xsd:annotation>
              <xsd:documentation>
                The 55-64 age segment. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="AGE_65_PLUS">
            <xsd:annotation>
              <xsd:documentation>
                The 65+ age segment. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="AuthenticationError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The single reason for the authentication failure.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="AUTHENTICATION_FAILED">
            <xsd:annotation>
              <xsd:documentation>
                Authentication of the request failed.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CLIENT_CUSTOMER_ID_IS_REQUIRED">
            <xsd:annotation>
              <xsd:documentation>
                Client Customer Id is required if CustomerIdMode is set to CLIENT_EXTERNAL_CUSTOMER_ID. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CLIENT_EMAIL_REQUIRED">
            <xsd:annotation>
              <xsd:documentation>
                Client Email is required if CustomerIdMode is set to CLIENT_EXTERNAL_EMAIL_FIELD. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CLIENT_CUSTOMER_ID_INVALID">
            <xsd:annotation>
              <xsd:documentation>
                Client customer Id is not a number. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CLIENT_EMAIL_INVALID">
            <xsd:annotation>
              <xsd:documentation>
                Client customer Id is not a number. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CLIENT_EMAIL_FAILED_TO_AUTHENTICATE">
            <xsd:annotation>
              <xsd:documentation>
                Client email is not a valid customer email. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CUSTOMER_NOT_FOUND">
            <xsd:annotation>
              <xsd:documentation>
                No customer found for the customer id provided in the header. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="GOOGLE_ACCOUNT_DELETED">
            <xsd:annotation>
              <xsd:documentation>
                Client's Google Account is deleted. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="GOOGLE_ACCOUNT_COOKIE_INVALID">
            <xsd:annotation>
              <xsd:documentation>
                Google account login token in the cookie is invalid. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="FAILED_TO_AUTHENTICATE_GOOGLE_ACCOUNT">
            <xsd:annotation>
              <xsd:documentation>
                problem occurred during Google account authentication. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="GOOGLE_ACCOUNT_USER_AND_ADS_USER_MISMATCH">
            <xsd:annotation>
              <xsd:documentation>
                The user in the google account login token does not match the UserId in the cookie. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="LOGIN_COOKIE_REQUIRED">
            <xsd:annotation>
              <xsd:documentation>
                Login cookie is required for authentication. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="NOT_ADS_USER">
            <xsd:annotation>
              <xsd:documentation>
                User in the cookie is not a valid Ads user. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="OAUTH_TOKEN_INVALID">
            <xsd:annotation>
              <xsd:documentation>
                Oauth token in the header is not valid. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="OAUTH_TOKEN_EXPIRED">
            <xsd:annotation>
              <xsd:documentation>
                Oauth token in the header has expired. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="OAUTH_TOKEN_DISABLED">
            <xsd:annotation>
              <xsd:documentation>
                Oauth token in the header has been disabled. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="OAUTH_TOKEN_REVOKED">
            <xsd:annotation>
              <xsd:documentation>
                Oauth token in the header has been revoked. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="OAUTH_TOKEN_HEADER_INVALID">
            <xsd:annotation>
              <xsd:documentation>
                Oauth token HTTP header is malformed. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="LOGIN_COOKIE_INVALID">
            <xsd:annotation>
              <xsd:documentation>
                Login cookie is not valid. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="FAILED_TO_RETRIEVE_LOGIN_COOKIE">
            <xsd:annotation>
              <xsd:documentation>
                Failed to decrypt the login cookie. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="USER_ID_INVALID">
            <xsd:annotation>
              <xsd:documentation>
                User Id in the header is not a valid id. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="AuthorizationError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the database error.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="UNABLE_TO_AUTHORIZE">
            <xsd:annotation>
              <xsd:documentation>
                Could not complete authorization due to an internal problem.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="NO_ADWORDS_ACCOUNT_FOR_CUSTOMER">
            <xsd:annotation>
              <xsd:documentation>
                Customer has no AdWords account.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="USER_PERMISSION_DENIED">
            <xsd:annotation>
              <xsd:documentation>
                User doesn't have permission to access customer.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="EFFECTIVE_USER_PERMISSION_DENIED">
            <xsd:annotation>
              <xsd:documentation>
                Effective user doesn't have permission to access this customer.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="USER_HAS_READONLY_PERMISSION">
            <xsd:annotation>
              <xsd:documentation>
                User has read-only permission cannot mutate.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="NO_CUSTOMER_FOUND">
            <xsd:annotation>
              <xsd:documentation>
                No customer found.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClientTermsError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            Enums for the various reasons an error can be thrown as a result of
            ClientTerms violation.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="INCOMPLETE_SIGNUP_CURRENT_ADWORDS_TNC_NOT_AGREED">
            <xsd:annotation>
              <xsd:documentation>
                Customer has not agreed to the latest adwords t&amp;c 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DatabaseError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the database error. 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="CONCURRENT_MODIFICATION">
            <xsd:annotation>
              <xsd:documentation>
                A concurrency problem occurred as two threads were attempting to modify same object. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="PERMISSION_DENIED">
            <xsd:annotation>
              <xsd:documentation>
                The permission was denied to access an object. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CAMPAIGN_PRODUCT_NOT_SUPPORTED">
            <xsd:annotation>
              <xsd:documentation>
                Requested campaign belongs to a product that is not supported by the api. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DateError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the target error. 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="INVALID_FIELD_VALUES_IN_DATE">
            <xsd:annotation>
              <xsd:documentation>
                Given field values do not correspond to a valid date. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_STRING_DATE">
            <xsd:annotation>
              <xsd:documentation>
                The string date's format should be yyyymmdd. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_STRING_DATE_RANGE">
            <xsd:annotation>
              <xsd:documentation>
                The string date range's format should be yyyymmdd yyyymmdd. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_STRING_DATE_TIME">
            <xsd:annotation>
              <xsd:documentation>
                The string date time's format should be yyyymmdd hhmmss [tz]. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="EARLIER_THAN_MINIMUM_DATE">
            <xsd:annotation>
              <xsd:documentation>
                Date is before allowed minimum. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="LATER_THAN_MAXIMUM_DATE">
            <xsd:annotation>
              <xsd:documentation>
                Date is after allowed maximum. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="DATE_RANGE_MINIMUM_DATE_LATER_THAN_MAXIMUM_DATE">
            <xsd:annotation>
              <xsd:documentation>
                Date range bounds are not in order. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="DATE_RANGE_MINIMUM_AND_MAXIMUM_DATES_BOTH_NULL">
            <xsd:annotation>
              <xsd:documentation>
                Both dates in range are null. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DayOfWeek">
        <xsd:annotation>
          <xsd:documentation>
            Days of the week.
            
            
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="MONDAY">
            <xsd:annotation>
              <xsd:documentation>
                The day of week named Monday. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="TUESDAY">
            <xsd:annotation>
              <xsd:documentation>
                The day of week named Tuesday. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="WEDNESDAY">
            <xsd:annotation>
              <xsd:documentation>
                The day of week named Wednesday. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="THURSDAY">
            <xsd:annotation>
              <xsd:documentation>
                The day of week named Thursday. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="FRIDAY">
            <xsd:annotation>
              <xsd:documentation>
                The day of week named Friday. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="SATURDAY">
            <xsd:annotation>
              <xsd:documentation>
                The day of week named Saturday. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="SUNDAY">
            <xsd:annotation>
              <xsd:documentation>
                The day of week named Sunday. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DeprecatedAd.Type">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="VIDEO" />
          <xsd:enumeration value="CLICK_TO_CALL" />
          <xsd:enumeration value="IN_STREAM_VIDEO" />
          <xsd:enumeration value="FROOGLE" />
          <xsd:enumeration value="TEXT_LINK" />
          <xsd:enumeration value="GADGET" />
          <xsd:enumeration value="PRINT" />
          <xsd:enumeration value="TEXT_WIDE" />
          <xsd:enumeration value="GADGET_TEMPLATE" />
          <xsd:enumeration value="TEXT_WITH_VIDEO" />
          <xsd:enumeration value="AUDIO" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DistinctError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the validation error. 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="DUPLICATE_ELEMENT" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EntityCountLimitExceeded.Reason">
        <xsd:annotation>
          <xsd:documentation>
            Limits at various levels of the account. 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="ACCOUNT_LIMIT" />
          <xsd:enumeration value="CAMPAIGN_LIMIT" />
          <xsd:enumeration value="ADGROUP_LIMIT" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EntityNotFound.Reason">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="INVALID_ID">
            <xsd:annotation>
              <xsd:documentation>
                The specified id refered to an entity which either doesn't exist or is not accessible to the
                customer. e.g. campaign belongs to another customer.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="GenderTarget.Gender">
        <xsd:annotation>
          <xsd:documentation>
            Gender segments. 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="MALE">
            <xsd:annotation>
              <xsd:documentation>
                The male gender segment. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="FEMALE">
            <xsd:annotation>
              <xsd:documentation>
                The female gender segment. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the target error. 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NOT_FOUND">
            <xsd:annotation>
              <xsd:documentation>
                Id not found 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ImageError.Reason">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="INVALID_IMAGE" />
          <xsd:enumeration value="STORAGE_ERROR" />
          <xsd:enumeration value="BAD_REQUEST" />
          <xsd:enumeration value="UNEXPECTED_SIZE" />
          <xsd:enumeration value="ANIMATED_NOT_ALLOWED" />
          <xsd:enumeration value="ANIMATION_TOO_LONG" />
          <xsd:enumeration value="SERVER_ERROR" />
          <xsd:enumeration value="CMYK_JPEG_NOT_ALLOWED" />
          <xsd:enumeration value="FLASH_NOT_ALLOWED" />
          <xsd:enumeration value="FLASH_WITHOUT_CLICKTAG" />
          <xsd:enumeration value="ANIMATED_VISUAL_EFFECT" />
          <xsd:enumeration value="FLASH_ERROR" />
          <xsd:enumeration value="LAYOUT_PROBLEM" />
          <xsd:enumeration value="PROBLEM_READING_IMAGE_FILE" />
          <xsd:enumeration value="ERROR_STORING_IMAGE" />
          <xsd:enumeration value="FLASH_HAS_NETWORK_OBJECTS" />
          <xsd:enumeration value="FLASH_HAS_NETWORK_METHODS" />
          <xsd:enumeration value="FLASH_HAS_URL" />
          <xsd:enumeration value="FLASH_HAS_MOUSE_TRACKING" />
          <xsd:enumeration value="FLASH_HAS_RANDOM_NUM" />
          <xsd:enumeration value="FLASH_SELF_TARGETS" />
          <xsd:enumeration value="FLASH_BAD_GETURL_TARGET" />
          <xsd:enumeration value="FLASH_VERSION_NOT_SUPPORTED" />
          <xsd:enumeration value="FILE_TOO_LARGE" />
          <xsd:enumeration value="IMAGE_DATA_TOO_LARGE" />
          <xsd:enumeration value="IMAGE_PROCESSING_ERROR" />
          <xsd:enumeration value="IMAGE_TOO_SMALL" />
          <xsd:enumeration value="INVALID_INPUT" />
          <xsd:enumeration value="PROBLEM_READING_FILE" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="InternalApiError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The single reason for the internal API error.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="UNEXPECTED_INTERNAL_API_ERROR">
            <xsd:annotation>
              <xsd:documentation>
                API encountered an unexpected internal error.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MarkupLanguageType">
        <xsd:annotation>
          <xsd:documentation>
            Markup languages to use for mobile ads.
            
            
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="HTML" />
          <xsd:enumeration value="CHTML" />
          <xsd:enumeration value="XHTML" />
          <xsd:enumeration value="WML" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Media.MediaExtendedCapabilityState">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="UNKNOWN" />
          <xsd:enumeration value="SUPPORTED" />
          <xsd:enumeration value="NOT_SUPPORTED" />
          <xsd:enumeration value="PASSED_PREREQ" />
          <xsd:enumeration value="FAILED_PREREQ" />
          <xsd:enumeration value="MEETS_CRITERIA" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Media.MediaExtendedCapabilityType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="MPEG2_PROGRAM_STREAM_SD" />
          <xsd:enumeration value="MPEG2_PROGRAM_STREAM_SD_WITH_BLACK" />
          <xsd:enumeration value="MPEG2_TRANSPORT_STREAM_SD" />
          <xsd:enumeration value="GXF_SD" />
          <xsd:enumeration value="FLV_320" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Media.MediaSubType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="GOOGLE_HOSTED" />
          <xsd:enumeration value="YOU_TUBE_HOSTED" />
          <xsd:enumeration value="IRS_STORED" />
          <xsd:enumeration value="ADS_DB_STORED" />
          <xsd:enumeration value="AMS_STORED" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Media.MediaType">
        <xsd:annotation>
          <xsd:documentation>
            Media types 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="AUDIO" />
          <xsd:enumeration value="DYNAMIC_IMAGE" />
          <xsd:enumeration value="HTML" />
          <xsd:enumeration value="ICON" />
          <xsd:enumeration value="IMAGE" />
          <xsd:enumeration value="STANDARD_ICON" />
          <xsd:enumeration value="VIDEO" />
          <xsd:enumeration value="VIDEO_IMAGE" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Media.MimeType">
        <xsd:annotation>
          <xsd:documentation>
            Mime types 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="IMAGE_JPEG" />
          <xsd:enumeration value="IMAGE_GIF" />
          <xsd:enumeration value="IMAGE_PNG" />
          <xsd:enumeration value="FLASH" />
          <xsd:enumeration value="TEXT_HTML" />
          <xsd:enumeration value="PDF" />
          <xsd:enumeration value="MSWORD" />
          <xsd:enumeration value="MSEXCEL" />
          <xsd:enumeration value="RTF" />
          <xsd:enumeration value="AUDIO_WAV" />
          <xsd:enumeration value="AUDIO_MP3" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Media.Size">
        <xsd:annotation>
          <xsd:documentation>
            Sizes for retrieving the original media 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="FULL" />
          <xsd:enumeration value="SHRUNKEN" />
          <xsd:enumeration value="PREVIEW" />
          <xsd:enumeration value="VIDEO_THUMBNAIL" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MediaError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the target error. 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="CANNOT_ADD_STANDARD_ICON">
            <xsd:annotation>
              <xsd:documentation>
                Cannot add a standard icon type 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="DUPLICATE_MEDIA">
            <xsd:annotation>
              <xsd:documentation>
                A media with given type and reference id already exists 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="EMPTY_FIELD">
            <xsd:annotation>
              <xsd:documentation>
                A required field was not specified or is an empty string. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="ENTITY_REFERENCED_IN_MULTIPLE_OPS">
            <xsd:annotation>
              <xsd:documentation>
                A media may only be modified once per call 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="FIELD_NOT_SUPPORTED_FOR_MEDIA_SUB_TYPE">
            <xsd:annotation>
              <xsd:documentation>
                Field is not supported for the media sub type. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_MEDIA_ID">
            <xsd:annotation>
              <xsd:documentation>
                The media id is invalid 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_MEDIA_TYPE">
            <xsd:annotation>
              <xsd:documentation>
                The media type is invalid 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_MEDIA_SUB_TYPE">
            <xsd:annotation>
              <xsd:documentation>
                The media subtype is invalid 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_REFERENCE_ID">
            <xsd:annotation>
              <xsd:documentation>
                The media reference id is invalid 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MEDIA_TYPE_DOES_NOT_MATCH_OBJECT_TYPE">
            <xsd:annotation>
              <xsd:documentation>
                The MediaType does not match the actual media object's type 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="NO_FIELDS_SPECIFIED">
            <xsd:annotation>
              <xsd:documentation>
                None of the fields have been specified. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="NULL_REFERENCE_ID_AND_MEDIA_ID">
            <xsd:annotation>
              <xsd:documentation>
                One of reference Id or media Id must be specified 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="TOO_LONG">
            <xsd:annotation>
              <xsd:documentation>
                The string has too many characters. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="UNSUPPORTED_OPERATION">
            <xsd:annotation>
              <xsd:documentation>
                The specified operation is not supported.  Only ADD, SET, and REMOVE
                are supported 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="UNSUPPORTED_TYPE" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MinuteOfHour">
        <xsd:annotation>
          <xsd:documentation>
            Minutes in an hour.  Currently only 0, 15, 30, and 45 are supported
            
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="ZERO">
            <xsd:annotation>
              <xsd:documentation>
                Zero minutes past hour. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="FIFTEEN">
            <xsd:annotation>
              <xsd:documentation>
                Fifteen minutes past hour. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="THIRTY">
            <xsd:annotation>
              <xsd:documentation>
                Thirty minutes past hour. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="FORTY_FIVE">
            <xsd:annotation>
              <xsd:documentation>
                Forty-five minutes past hour. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NetworkCoverageType">
        <xsd:annotation>
          <xsd:documentation>
            Network coverage types.
            
            
            
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="GOOGLE_SEARCH">
            <xsd:annotation>
              <xsd:documentation>
                Indicate ads coverage for "google_search". 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="SEARCH_NETWORK">
            <xsd:annotation>
              <xsd:documentation>
                Indicate ads coverage for "search_synd". 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CONTENT_NETWORK">
            <xsd:annotation>
              <xsd:documentation>
                Indicate ads coverage for "content_synd". 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CONTENT_CONTEXTUAL">
            <xsd:annotation>
              <xsd:documentation>
                Indicate ads coverage for "content_synd_contextual". 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CPA_REFERRAL">
            <xsd:annotation>
              <xsd:documentation>
                Indicate ads coverage for "referral". 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NewEntityCreationError.Reason">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="CANNOT_SET_ID_FOR_ADD">
            <xsd:annotation>
              <xsd:documentation>
                Do not set the id field while creating new entities. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NotEmptyError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the validation error. 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="EMPTY_LIST" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NotWhitelistedError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The single reason for the whitelist error.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="CUSTOMER_NOT_WHITELISTED_FOR_API">
            <xsd:annotation>
              <xsd:documentation>
                Customer is not whitelisted for accessing the API.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NullError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the validation error. 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NULL_CONTENT">
            <xsd:annotation>
              <xsd:documentation>
                Specified list/container must not contain any null elements 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="OperationAccessDenied.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the operation access error. 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="ACTION_NOT_PERMITTED">
            <xsd:annotation>
              <xsd:documentation>
                Unauthorized invocation of a service's method (get, mutate, etc.) 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="ADD_OPERATION_NOT_PERMITTED">
            <xsd:annotation>
              <xsd:documentation>
                Unauthorized ADD operation in invoking a service's mutate method. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="REMOVE_OPERATION_NOT_PERMITTED">
            <xsd:annotation>
              <xsd:documentation>
                Unauthorized REMOVE operation in invoking a service's mutate method. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="SET_OPERATION_NOT_PERMITTED">
            <xsd:annotation>
              <xsd:documentation>
                Unauthorized SET operation in invoking a service's mutate method. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Operator">
        <xsd:annotation>
          <xsd:documentation>
            This represents an operator that may be presented to an adsapi service.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="ADD">
            <xsd:annotation>
              <xsd:documentation>
                The ADD operator. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="REMOVE">
            <xsd:annotation>
              <xsd:documentation>
                The REMOVE operator. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="SET">
            <xsd:annotation>
              <xsd:documentation>
                The SET operator (used for updates). 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="PagingError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for errors when using pagination. 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="START_INDEX_CANNOT_BE_NEGATIVE" />
          <xsd:enumeration value="NUMBER_OF_RESULTS_CANNOT_BE_NEGATIVE" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="PlatformType">
        <xsd:annotation>
          <xsd:documentation>
            Platform types.
            
            
            
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="DESKTOP">
            <xsd:annotation>
              <xsd:documentation>
                Indicate ads coverage for desktops and laptops. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="HIGH_END_MOBILE">
            <xsd:annotation>
              <xsd:documentation>
                Indicate ads coverage for mobile devices with full internet browsers. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ProximityTarget.DistanceUnits">
        <xsd:annotation>
          <xsd:documentation>
            The radius distance is expressed in either kilometers or miles. 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="KILOMETERS">
            <xsd:annotation>
              <xsd:documentation>
                The unit of distance is kilometer. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MILES">
            <xsd:annotation>
              <xsd:documentation>
                The unit of distance is mile. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="QuotaCheckError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            Enums for all the reasons an error can be thrown to the user during
            billing quota checks.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="INVALID_TOKEN_HEADER">
            <xsd:annotation>
              <xsd:documentation>
                Customer passed in an invalid token in the header. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="ACCOUNT_DELINQUENT">
            <xsd:annotation>
              <xsd:documentation>
                Customer is marked delinquent. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="ACCOUNT_INACCESSIBLE">
            <xsd:annotation>
              <xsd:documentation>
                Customer is a fraudulent. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="ACCOUNT_INACTIVE">
            <xsd:annotation>
              <xsd:documentation>
                Inactive Account. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INCOMPLETE_SIGNUP">
            <xsd:annotation>
              <xsd:documentation>
                Signup not complete 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INCOMPLETE_SIGNUP_APP_INFO_MISSING">
            <xsd:annotation>
              <xsd:documentation>
                App info missing. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INCOMPLETE_SIGNUP_APP_INFO_PENDING">
            <xsd:annotation>
              <xsd:documentation>
                Incomplete App info. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INCOMPLETE_SIGNUP_APP_INFO_REJECTED">
            <xsd:annotation>
              <xsd:documentation>
                App info rejected. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INCOMPLETE_SIGNUP_LATEST_NETAPI_TNC_NOT_AGREED">
            <xsd:annotation>
              <xsd:documentation>
                Latest Netapi T&amp;C not agreed. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INCOMPLETE_SIGNUP_NO_BILLING_INFO">
            <xsd:annotation>
              <xsd:documentation>
                No Billing Info. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INCOMPLETE_SIGNUP_USER_INFO_MISSING">
            <xsd:annotation>
              <xsd:documentation>
                User Info missing. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INCOMPLETE_SIGNUP_USER_INFO_PENDING">
            <xsd:annotation>
              <xsd:documentation>
                User Info pending. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INCOMPLETE_SIGNUP_USER_INFO_REJECTED">
            <xsd:annotation>
              <xsd:documentation>
                User Info rejected. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MONTHLY_BUDGET_REACHED">
            <xsd:annotation>
              <xsd:documentation>
                Monthly budget quota reached. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="QUOTA_EXCEEDED">
            <xsd:annotation>
              <xsd:documentation>
                Monthly budget quota exceeded. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="QuotaExceededError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The single reason for the quota error.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="QUOTA_EXCEEDED">
            <xsd:annotation>
              <xsd:documentation>
                Quota exceeded.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ReadOnlyError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the target error. 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="READ_ONLY" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="RequiredError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the target error. 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="REQUIRED">
            <xsd:annotation>
              <xsd:documentation>
                Missing required field. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SizeLimitError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for Ad Scheduling errors. 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="REQUEST_SIZE_LIMIT_EXCEEDED">
            <xsd:annotation>
              <xsd:documentation>
                The number of entries in the request exceeds the system limit. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="RESPONSE_SIZE_LIMIT_EXCEEDED">
            <xsd:annotation>
              <xsd:documentation>
                The number of entries in the response exceeds the system limit. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Stats.Network">
        <xsd:annotation>
          <xsd:documentation>
            Ad network.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="SEARCH">
            <xsd:annotation>
              <xsd:documentation>
                Aggregate of {@code GOOGLE_SEARCH} and {@code SEARCH_NETWORK}.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="GOOGLE_SEARCH" />
          <xsd:enumeration value="SEARCH_NETWORK" />
          <xsd:enumeration value="CONTENT">
            <xsd:annotation>
              <xsd:documentation>
                Aggregate of {@code CONTENT_KEYWORD_BID} and {@code CONTENT_PLACEMENT_BID}.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CONTENT_KEYWORD_BID" />
          <xsd:enumeration value="CONTENT_PLACEMENT_BID" />
          <xsd:enumeration value="ALL" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="StatsQueryError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for errors when querying for stats. 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="DATE_NOT_IN_VALID_RANGE">
            <xsd:annotation>
              <xsd:documentation>
                Date is outside of allowed range. 
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TemplateElementField.Type">
        <xsd:annotation>
          <xsd:documentation>
            Field types 
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="ADDRESS" />
          <xsd:enumeration value="AUDIO" />
          <xsd:enumeration value="ENUM" />
          <xsd:enumeration value="IMAGE" />
          <xsd:enumeration value="TEXT" />
          <xsd:enumeration value="URL" />
          <xsd:enumeration value="VIDEO" />
          <xsd:enumeration value="VISIBLE_URL" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="get">
        <xsd:annotation>
          <xsd:documentation>
            Returns a list of AdGroupAds based on an AdGroupAdSelector.  The
            selector defines a specific set of AdGroupAds that are to be returned - an
            AdGroupAd must pass all the filters specified in the argument
            AdGroupAdSelector.
            @param selector the selector specifying the query
            @return the AdGroupAds specified
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="selector" type="tns:AdGroupAdSelector">
              <xsd:annotation>
                <xsd:documentation>
                  &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                </xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="rval" type="tns:AdGroupAdPage" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ApiExceptionFault" type="tns:ApiException">
        <xsd:annotation>
          <xsd:documentation>
            A fault element of type ApiException.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="mutate">
        <xsd:annotation>
          <xsd:documentation>
            Applies the list of mutate operations (ie. add, set, remove):
            
            Add - Creates a set of AdGroupAd entities, each effectively linking an
            AdGroup and an Ad.  The adGroupId of each AdGroupAd must be that of an
            existing AdGroup.  The Ad may either specify an existing Ad in the account
            library by id or be sufficiently specified for a new Ad to be created and
            added to the account library.
            
            Set - Updates a set of AdGroupAd entities. Except for status, AdGroupAd
            fields are not mutable. Status updates are straightforward - the status of
            the AdGroupAd is updated as specified.
            
            Remove - Removes the link between the specified AdGroup and Ad.
            
            @param operations the operations to apply
            @return a list of AdGroupAds where each entry in the list is the result of
            applying the operation in the input list with the same index. For an
            add/set operation, the return AdGroupAd will be what is saved to the db.
            In the case, of the remove operation, the return AdGroupAd will simply be
            an AdGroupAd containing an Ad with the id set to the Ad being deleted from
            the AdGroup.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="unbounded" name="operations" type="tns:AdGroupAdOperation">
              <xsd:annotation>
                <xsd:documentation>
                  &lt;span class="constraint ContentsNotNull"&gt;This field must not contain {@code null} elements.&lt;/span&gt;
                  &lt;span class="constraint DistinctIds"&gt;Elements in this field must have distinct IDs for following {@link Operator}s : SET, REMOVE.&lt;/span&gt;
                  &lt;span class="constraint NotEmpty"&gt;This field must contain at least one element.&lt;/span&gt;
                  &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                </xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="mutateResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="rval" type="tns:AdGroupAdReturnValue" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="RequestHeader" type="tns:SoapHeader" />
      <xsd:element name="ResponseHeader" type="tns:SoapResponseHeader" />
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="RequestHeader">
    <wsdl:part name="RequestHeader" element="tns:RequestHeader" />
  </wsdl:message>
  <wsdl:message name="ResponseHeader">
    <wsdl:part name="ResponseHeader" element="tns:ResponseHeader" />
  </wsdl:message>
  <wsdl:message name="getRequest">
    <wsdl:part name="parameters" element="tns:get" />
  </wsdl:message>
  <wsdl:message name="getResponse">
    <wsdl:part name="parameters" element="tns:getResponse" />
  </wsdl:message>
  <wsdl:message name="ApiException">
    <wsdl:part name="ApiException" element="tns:ApiExceptionFault" />
  </wsdl:message>
  <wsdl:message name="mutateRequest">
    <wsdl:part name="parameters" element="tns:mutate" />
  </wsdl:message>
  <wsdl:message name="mutateResponse">
    <wsdl:part name="parameters" element="tns:mutateResponse" />
  </wsdl:message>
  <wsdl:portType name="AdGroupAdServiceInterface">
    <wsdl:documentation>
      Service for managing AdGroupAd entities.  AdGroupAds maintain the
      relationships between AdGroups and Ads.
    </wsdl:documentation>
    <wsdl:operation name="get">
      <wsdl:documentation>
        Returns a list of AdGroupAds based on an AdGroupAdSelector.  The
        selector defines a specific set of AdGroupAds that are to be returned - an
        AdGroupAd must pass all the filters specified in the argument
        AdGroupAdSelector.
        @param selector the selector specifying the query
        @return the AdGroupAds specified
      </wsdl:documentation>
      <wsdl:input name="getRequest" message="tns:getRequest" />
      <wsdl:output name="getResponse" message="tns:getResponse" />
      <wsdl:fault name="ApiException" message="tns:ApiException" />
    </wsdl:operation>
    <wsdl:operation name="mutate">
      <wsdl:documentation>
        Applies the list of mutate operations (ie. add, set, remove):
        
        Add - Creates a set of AdGroupAd entities, each effectively linking an
        AdGroup and an Ad.  The adGroupId of each AdGroupAd must be that of an
        existing AdGroup.  The Ad may either specify an existing Ad in the account
        library by id or be sufficiently specified for a new Ad to be created and
        added to the account library.
        
        Set - Updates a set of AdGroupAd entities. Except for status, AdGroupAd
        fields are not mutable. Status updates are straightforward - the status of
        the AdGroupAd is updated as specified.
        
        Remove - Removes the link between the specified AdGroup and Ad.
        
        @param operations the operations to apply
        @return a list of AdGroupAds where each entry in the list is the result of
        applying the operation in the input list with the same index. For an
        add/set operation, the return AdGroupAd will be what is saved to the db.
        In the case, of the remove operation, the return AdGroupAd will simply be
        an AdGroupAd containing an Ad with the id set to the Ad being deleted from
        the AdGroup.
      </wsdl:documentation>
      <wsdl:input name="mutateRequest" message="tns:mutateRequest" />
      <wsdl:output name="mutateResponse" message="tns:mutateResponse" />
      <wsdl:fault name="ApiException" message="tns:ApiException" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="AdGroupAdServiceSoapBinding" type="tns:AdGroupAdServiceInterface">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="get">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getRequest">
        <wsdlsoap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getResponse">
        <wsdlsoap:header message="tns:ResponseHeader" part="ResponseHeader" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="ApiException">
        <wsdlsoap:fault use="literal" name="ApiException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="mutate">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="mutateRequest">
        <wsdlsoap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="mutateResponse">
        <wsdlsoap:header message="tns:ResponseHeader" part="ResponseHeader" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="ApiException">
        <wsdlsoap:fault use="literal" name="ApiException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="AdGroupAdService">
    <wsdl:port name="AdGroupAdServiceInterfacePort" binding="tns:AdGroupAdServiceSoapBinding">
      <wsdlsoap:address location="https://adwords.google.com/api/adwords/cm/v200909/AdGroupAdService" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>