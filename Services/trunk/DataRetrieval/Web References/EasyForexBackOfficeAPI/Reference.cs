//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4200
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4200.
// 
#pragma warning disable 1591

namespace Easynet.Edge.Services.DataRetrieval.EasyForexBackOfficeAPI {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MarketingSoap", Namespace="http://www.easy-forex.com")]
    public partial class Marketing : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthHeader authHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetCampaignStatisticsNEWOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGatewayStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampaignStatisticsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Marketing() {
            this.Url = global::Easynet.Edge.Services.DataRetrieval.Properties.Settings.Default.Edge_Services_DataRetrieval_EasyForexBackOfficeAPI_Marketing;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthHeader AuthHeaderValue {
            get {
                return this.authHeaderValueField;
            }
            set {
                this.authHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCampaignStatisticsNEWCompletedEventHandler GetCampaignStatisticsNEWCompleted;
        
        /// <remarks/>
        public event GetGatewayStatisticsCompletedEventHandler GetGatewayStatisticsCompleted;
        
        /// <remarks/>
        public event GetCampaignStatisticsCompletedEventHandler GetCampaignStatisticsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.easy-forex.com/GetCampaignStatisticsNEW", RequestNamespace="http://www.easy-forex.com", ResponseNamespace="http://www.easy-forex.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCampaignStatisticsNEW(int startGid, int finishGid, System.DateTime fromDateTime, System.DateTime toDateTime) {
            object[] results = this.Invoke("GetCampaignStatisticsNEW", new object[] {
                        startGid,
                        finishGid,
                        fromDateTime,
                        toDateTime});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampaignStatisticsNEWAsync(int startGid, int finishGid, System.DateTime fromDateTime, System.DateTime toDateTime) {
            this.GetCampaignStatisticsNEWAsync(startGid, finishGid, fromDateTime, toDateTime, null);
        }
        
        /// <remarks/>
        public void GetCampaignStatisticsNEWAsync(int startGid, int finishGid, System.DateTime fromDateTime, System.DateTime toDateTime, object userState) {
            if ((this.GetCampaignStatisticsNEWOperationCompleted == null)) {
                this.GetCampaignStatisticsNEWOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignStatisticsNEWOperationCompleted);
            }
            this.InvokeAsync("GetCampaignStatisticsNEW", new object[] {
                        startGid,
                        finishGid,
                        fromDateTime,
                        toDateTime}, this.GetCampaignStatisticsNEWOperationCompleted, userState);
        }
        
        private void OnGetCampaignStatisticsNEWOperationCompleted(object arg) {
            if ((this.GetCampaignStatisticsNEWCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampaignStatisticsNEWCompleted(this, new GetCampaignStatisticsNEWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.easy-forex.com/GetGatewayStatistics", RequestNamespace="http://www.easy-forex.com", ResponseNamespace="http://www.easy-forex.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGatewayStatistics(int startGid, int finishGid, System.DateTime fromDateTime, System.DateTime toDateTime) {
            object[] results = this.Invoke("GetGatewayStatistics", new object[] {
                        startGid,
                        finishGid,
                        fromDateTime,
                        toDateTime});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGatewayStatisticsAsync(int startGid, int finishGid, System.DateTime fromDateTime, System.DateTime toDateTime) {
            this.GetGatewayStatisticsAsync(startGid, finishGid, fromDateTime, toDateTime, null);
        }
        
        /// <remarks/>
        public void GetGatewayStatisticsAsync(int startGid, int finishGid, System.DateTime fromDateTime, System.DateTime toDateTime, object userState) {
            if ((this.GetGatewayStatisticsOperationCompleted == null)) {
                this.GetGatewayStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGatewayStatisticsOperationCompleted);
            }
            this.InvokeAsync("GetGatewayStatistics", new object[] {
                        startGid,
                        finishGid,
                        fromDateTime,
                        toDateTime}, this.GetGatewayStatisticsOperationCompleted, userState);
        }
        
        private void OnGetGatewayStatisticsOperationCompleted(object arg) {
            if ((this.GetGatewayStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGatewayStatisticsCompleted(this, new GetGatewayStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.easy-forex.com/GetCampaignStatistics", RequestNamespace="http://www.easy-forex.com", ResponseNamespace="http://www.easy-forex.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCampaignStatistics(int startGid, int finishGid, System.DateTime fromDateTime, System.DateTime toDateTime) {
            object[] results = this.Invoke("GetCampaignStatistics", new object[] {
                        startGid,
                        finishGid,
                        fromDateTime,
                        toDateTime});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampaignStatisticsAsync(int startGid, int finishGid, System.DateTime fromDateTime, System.DateTime toDateTime) {
            this.GetCampaignStatisticsAsync(startGid, finishGid, fromDateTime, toDateTime, null);
        }
        
        /// <remarks/>
        public void GetCampaignStatisticsAsync(int startGid, int finishGid, System.DateTime fromDateTime, System.DateTime toDateTime, object userState) {
            if ((this.GetCampaignStatisticsOperationCompleted == null)) {
                this.GetCampaignStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignStatisticsOperationCompleted);
            }
            this.InvokeAsync("GetCampaignStatistics", new object[] {
                        startGid,
                        finishGid,
                        fromDateTime,
                        toDateTime}, this.GetCampaignStatisticsOperationCompleted, userState);
        }
        
        private void OnGetCampaignStatisticsOperationCompleted(object arg) {
            if ((this.GetCampaignStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampaignStatisticsCompleted(this, new GetCampaignStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.easy-forex.com")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.easy-forex.com", IsNullable=false)]
    public partial class AuthHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string usernameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetCampaignStatisticsNEWCompletedEventHandler(object sender, GetCampaignStatisticsNEWCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampaignStatisticsNEWCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampaignStatisticsNEWCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetGatewayStatisticsCompletedEventHandler(object sender, GetGatewayStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGatewayStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGatewayStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetCampaignStatisticsCompletedEventHandler(object sender, GetCampaignStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampaignStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampaignStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591